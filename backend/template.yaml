AWSTemplateFormatVersion: 2010-09-09
Description: >-
  goshenkata-backend

Transform:
- AWS::Serverless-2016-10-31

Globals:
  Api:
    Auth:
      DefaultAuthorizer: CognitoAuthorizer
      Authorizers:
        CognitoAuthorizer:
          UserPoolArn: arn:aws:cognito-idp:eu-central-1:207567768006:userpool/eu-central-1_VG1OzzrL0
Resources:
  createEntryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-entry.createEntryHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref DiaryTable
      Environment:
        Variables:
          DIARY_TABLE: !Ref DiaryTable
          ALLOWED_USER_EMAIL: goshenkataklev@gmail.com
      Events:
        Api:
          Type: Api
          Properties:
            Path: /entry
            Method: POST
  getEntryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-entry.getEntryHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Get diary entries for a user by date.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DiaryTable
      Environment:
        Variables:
          DIARY_TABLE: !Ref DiaryTable
          ALLOWED_USER_EMAIL: goshenkataklev@gmail.com
      Events:
        Api:
          Type: Api
          Properties:
            Path: /entry/{date}
            Method: GET
  getEntriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-entries.getEntriesHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Get paginated diary entries for a user sorted by date desc.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DiaryTable
      Environment:
        Variables:
          DIARY_TABLE: !Ref DiaryTable
          ALLOWED_USER_EMAIL: goshenkataklev@gmail.com
      Events:
        Api:
          Type: Api
          Properties:
            Path: /entries
            Method: GET
  DiaryTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: userId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 4
        WriteCapacityUnits: 4
  ApiGatewayUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /goshenkata/api/url
      Type: String
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      Description: "API Gateway endpoint URL for goshenkata backend"
Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
